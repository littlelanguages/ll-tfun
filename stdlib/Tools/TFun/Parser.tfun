import * as Scanner from "./Parser/Scanner.tfun" ;
import * from "./Errors.tfun" ;

data Expression* =
    LBool (Bool) Scanner.Location ;

type ParserResult = (Scanner.Scanner * Result Errors Expression) ;

let factor (scanner: Scanner.Scanner): ParserResult =
  match scanner.token with
  | Scanner.TFalse l -> (Scanner.next scanner, LBool False l |> Okay)
  | Scanner.TTrue l ->  (Scanner.next scanner, LBool True l |> Okay)
  | _ -> (scanner, SyntaxError scanner.token ["False", "True"] |> Error) ;
    
let parse* (scanner: Scanner.Scanner): Result Errors Expression =
  match factor scanner with
  | (scannerp, Okay expression) -> 
      if (Scanner.atEnd scannerp)
        expression |> Okay
      else
        SyntaxError scannerp.token ["EOS"] |> Error
  | (scanner, Error error) -> Error error ;

let parseText* (text: String): Result Errors Expression =
  Scanner.fromString text |> parse
