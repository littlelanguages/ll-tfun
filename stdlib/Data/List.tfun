import * from "./Maybe.tfun" ;
import * as String from "./String.tfun" ;

-- This declaration is in the prelude - adding it here will result in a re-declaration error
-- data List* a = Nil | Cons a (List a) ;

let range* n = 
  let rec helper m =
     if (n == m) Nil else Cons m (helper (m + 1))
   in helper 0 ;

let rec foldRight* f z lst =
  match lst with
  | Nil -> z
  | Cons x xs -> f x (foldRight f z xs) ;

let length* =
  foldRight (\a b = b + 1) 0 ;

let sum* = 
  foldRight (\a b = a + b) 0 ;

let map* f =
  foldRight (\a = Cons (f a)) Nil ;

let rec find* p lst =
  match lst with
  | Nil -> Nothing
  | Cons x xs -> if (p x) Just x else find p xs ;

let rec any* p lst =
  match lst with
  | Nil -> False
  | Cons x xs -> if (p x) True else any p xs ;

let rec filter* p lst =
  match lst with
  | Nil -> Nil
  | Cons x xs -> if (p x) Cons x (filter p xs) else filter p xs ;

let rec join* (sep: String) (lst: List String): String =
  match lst with
  | Nil -> ""
  | Cons x Nil -> x
  | Cons x xs -> String.append (String.append x sep) (join sep xs)
